name: Moving Voting App Pipeline Demo
on: [push]
jobs:
  docker:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Import Secrets from Vault
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: ${{ secrets.VAULT_ADDR }}
        token: ${{ secrets.VAULT_TOKEN }}
        secrets: |
          secret/data/ci DOCKERHUB_USERNAME | DOCKERHUB_USERNAME ;
          secret/data/ci DOCKERHUB_TOKEN | DOCKERHUB_TOKEN ;
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
    - name: Build and push server image
      uses: docker/build-push-action@v3
      with:
        context: ./server
        push: true
        tags: vsgdev/jsmovievoting_api:1.0.0
    - name: Build and push client image
      uses: docker/build-push-action@v3
      with:
        context: ./client
        push: true
        tags: vsgdev/jsmovievoting_client:1.0.0
  kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: latest
      id: install
    - name: Configure GKE gsa-key.json file
      run: |
        echo -n 'ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiY2lyY3VsYXItZnVzaW9uLTM0ODExMSIsCiAgInByaXZhdGVfa2V5X2lkIjogImMxMzFmNDdkZWU2NzlkZWMyMTk2ZTBmYmMzZmQxMDE0ZWRmYTA3MWYiLAogICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzI3b1VnWXlsbFo2aWFcbkdGZStMODQ4TGpIQWNSTXJKSWFEc1Z5dFZlTUVrVndYcTFxM3R3emRNSjB3SEZuUHZHTy90WTNSVjArZWxmaW5cblpvRGI5L3o3Qi9QTkNwVkNOU0lwVVdhN2ZLQW9aTUs1ZVdPbk1adVdSdmk4bEk3WDgxSFN4cTdzWjZ2WVdaNEVcblZsZVpJUFR1eEg2dFJlaFByYndvRk94WHRrRWJmVUYySkRoUFhIckovSUJYbzh2UTh4TFg5VDRGVFhucFFBdUNcbmowbTEwb3Fld3NuT1g4NlhzN3U0a1FubmVva3NwZDZEenRvOWREL2ZyQzlsc09yK0FvMDdxcTJnZmU5OTl4YTdcbnh6VjJzZWpZeE1QMVFUSEhTVnFlMnlIN3ZySXhndi9YWmZMSHprZU8rWWFWMW11enlRSnh6NWJMOWR0MzBweG1cblVnTzBnNWZYQWdNQkFBRUNnZ0VBQTQzLy9VQ2dDYzNwVzFFMHgwZlRpSnpYTDZlaTJUaEUrdU1qNjJSYlhIZmNcbm84TWJLSzNBYkwzb21Bbzgvb25wSUUwTlcrK0g1d3VBQVBTL2RVYk0zaTNwNFdhZXZ1SWNiMVFiSEhLUUJDanRcbkZjQ1RuS2ljbnQ5ekx1cnVHYWtyUWw3RkFHZ0ZVVmR3ZUNJYllxamV5Wkw4NlM0T0ZScEpxVGU2M2Z0M0tXc05cbnhEVC85NWJyOXlJbTZaL2d5VnFRZmpNRncvbUdoUnA3L0hhcXpsUW1tUzVsLzRsck80Zm1JRjFncWhycVJxQVNcbkdleUQ4NzZ6SGtNUklIWnEyUXFzcDkzQWg4bDZuR1RqMkxrUFBWVVVpMk9rZkVGdlRZYW5lb0t1UzZ4TFRNSUFcbjh0R28wWTJ0aVFaSmFGMHJDYmxGTUZJdFNoUjA0V3ArQklrdjZuYlFSUUtCZ1FEZWhuTU0rdVladDM5dVVuT0Rcbi91aDJzaGJHRFhsdUE0WXdWZWQ5NFNWdjdzTGd3MHVQZmZ4d1kvcXlPdS9INEZRYnRNSlRMQmhaM1JJK3pMd2RcbnVldm0rN1g5azZEYmJWZWorZnd4Y29YemFuaUd1YlAwTUZDQlZCdTJ5Vk5tNUcxTUNxallCT1YzcDdUSzJaYkJcbnptN0k3MmJIc3ZjaHI3NkhLOWNqNHV2RERRS0JnUURTYzA2aVVQZUdKa1A0b3RTN3cwdmZQR0ZYR2dzNlRxaHpcbktCb0Z1YitESnMyNE5VOWttZGNmMjE3MGt2OFJ6SUJBY3FnS3lOeEhIR1V4dU9qaEV5S3J4UXpVdW9zdTA0TW9cbkRobHIzWUxzeXdnRWtMTTR4ZXRIYXhSOVVYVnpmcTBIajRHVElVb1duejBCOWpwYk44ODhnYUhnYnk3NmlTODdcbjYxWk1WdXlkY3dLQmdGb2FwUEdIa3E2dEg3dGpSWVVZTGJjS1M3QnNlbFB5dDE1UkdvaGRKMVNZb0c1MGhkOFhcbmk2VlN4b3R1MC9MaVFneHArQm5IakNDdkpKa3JPNnpwd0x6cUJYb2xVZ2duMFVvRGludlhQS2dnMzZibUFSa0tcbml6NmkrUW5kb1pqVE8vS0RpblRXSHJpQnZ2STRneFA4NjkwUEcxWVhnSHd5ZG5xelpNMFNNSmJ0QW9HQkFLMW5cbk5UT3BZMHExM092UnYxZTI0NTFkTXhlQjdoNXRFWDlSVzUrOEhZRURTQjZ3VG1xbUdBdTN4ZFhnQ1N1eFJUdlZcblBZRWxYOXQ0R2ltT0l0VFIzNCtKSGJscXU2UXB3N2dOWmdUcTBDWXNaTDdlTzg1YnhqRmltYzlvZjA1YTRsZUlcbmQwdXo4a2dSalVOQWozVDUxMWdUdUQ0bFhxQXd5U3FtRHNWNEdoN2hBb0dCQUtwUzlhVjBIL0QwNEFyNzAvTjFcbkVpb0UzdXQzVU9ObHVPSmUyNmRYdWYvSmszZmdVdzlpMUg0ajdqWnNuVzcrUXlDV3NnRE1PQzVmdnFrWkxjTVJcbjU3QU5rU2U2RTRlY21QRmZjM2JpcDhEb2ZhUTdtQTM3aUw0eU5jeFZObE5zUEVwOGVqc0VZQmlnOTUycE50V2VcbndPWkJrM002THNHVnNrS1ZLQkxFemVqNFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogImNpLWNkLXBpcGVsaW5lQGNpcmN1bGFyLWZ1c2lvbi0zNDgxMTEuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTE0NDQ4NzgzNTY5NDQzMzEzOTUxIiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9jaS1jZC1waXBlbGluZSU0MGNpcmN1bGFyLWZ1c2lvbi0zNDgxMTEuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0K' | base64 --decode > gsa-key.json
        echo "::set-output name=GOOGLE_CREDS::$(echo $(pwd)/gsa-key.json)"
      id: google-creds
    - name: Configure kubeconfig
      run: |
        echo -n 'YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIGNsdXN0ZXI6CiAgICBjZXJ0aWZpY2F0ZS1hdXRob3JpdHktZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVVk1WRU5EUVhCWFowRjNTVUpCWjBsU1FVNWxObEZwWXpCcmQwWktibGhUY0ZSd2VFVkhhRzkzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhjS1RIcEZkRTFEYzBkQk1WVkZRWGhOYTFwcVFtbE9lbHBzVDBkVmRGbFhUbWhOZVRBd1RYcFNiVXhVYTNoTk1sVjBXbFJSZVU1RVVUUmFWRWt5VGtkU2FncE5RMEZZUkZSSmVVMUVWWHBOUkVFeVRVUkJlazVXYjFsRWVrbDNUbFJKZDA1VVNYbE5SR04zVFVSTk1WZHFRWFpOVXpCM1MzZFpSRlpSVVVSRmVWSnRDazFIU1ROT2JWVTBXbE14YUZreVJYcE1WRkY2VGtkWmRFOVVSWHBhVXpGc1RrUkpNRTVFYUd4TmFsa3dXa2ROZDJkblIybE5RVEJIUTFOeFIxTkpZak1LUkZGRlFrRlJWVUZCTkVsQ2FuZEJkMmRuUjB0QmIwbENaMUZEYmpscFdIaEdVSGhFY1hCUU0zbEZWakU0Tm10M2QxRndjbGR4YTNWcU4zRk9OWGRSWkFwV05HWnBTR3hRWnpRdlkzVlVWRTVhS3pCelkyUlNkR1UwUkdWcllVYzVZbXhTY25kV1Z6QXlRM1YyWVUwclUwZHBTRTgyVGtvelIwUjBTR2xJYTBzMkNsRmFURTVKY2pkUWRVVkRXamwzWW1sUVNqTnpXRTFEYVVZMGIybFVUazk1UmxJdldqQm5NV3B1VFdaUFJHdHdVSGhyUVVscFEzQXpVemRxT0U1RWFrUUtkMnR0TlZabVVIRkNURGtyTkRkNWNIVnVURmRrV0ZCMlowSjFaMVp3UzJsMEszZG1Ta1ZNVWtrMU1YTnhiMEpRUjFCU1lrRkllVzh2VFVoRWVIVnhTd3BqVm01SmFIZGxXWEZ6V25GRE5HWnpjVU5PYmtOU05YRTRibE5CWkhocWJUSmFiSEpxT0V4NFVXSkNWVmxHWldaSmEwdEZSbTE1Y0hRMmNYaEZTa0lyQ2pNdldITndjekl3TmxwbGVXdDZPRVZhVjBsT1dGVm1SVXByY0ZRNWJHeFViaTkwZWxwR055dENTekpCT1hKYVkwRTBjemhSTmpWSlRsSTFZa2czWjBFS2VsUmlRMDR5ZW5WU1N6Tm1RbE1yYzFKTmJuSTRNRXRIT1dnNGNWRjZWbm8wUm1WR01HbEdNVXRxUWs1WE1IVXZaamN3YlZaQmNGQm5Sa0pPZEc4d2FRcGlRazFETW1OSGVsZ3JlUzlJZUhsa1NIcHhlRk5wWTJzNGJWUllTU3RpUnl0bFREUnFOeXQwWTA1M1ZXVlZSVVZtU2pWM05FRkhaMWxhY0VSdmFUYzRDbTFOVVhwRWFFSkdiWFZLTjB4bVpqWnJXRTVqTTNKUlMwaGxhME5CZDBWQlFXRk9RMDFGUVhkRVoxbEVWbEl3VUVGUlNDOUNRVkZFUVdkSlJVMUJPRWNLUVRGVlpFVjNSVUl2ZDFGR1RVRk5Ra0ZtT0hkSVVWbEVWbEl3VDBKQ1dVVkdSbkJpY0N0SlFtcENUMHRUU0ZoWVVrdGlNalpMVWtSRlVuTkxUVUV3UndwRFUzRkhVMGxpTTBSUlJVSkRkMVZCUVRSSlFtZFJRV0Z5VG5OTmNscEZLM0UxVmpneVNWQnVObVUxY1RCWmEwbHNiVEo1Ym1ndlpsUnlOekUyV2toVkNqY3JOMnQxWTFVNVEzSTRlakZ4VFdZM1VVVnVXQzltYmpaTFdVVnNlbkpxT0ZaMWFraHdhbFZoV2pOWmVUbFJSWEpWVFVZMlRreEpSbVJPU2pCTVFrOEtVRllyZUhVNFZVdExOa3d3YlZaMVkydFdXa2xzYVhoaVJVbG5RMFJXUlhweFkyTlpVMkV5Y0U5WmJIcHZVelZzUzBGNk1VNURXbkpSYlVveGRXZDJjUXBNSzFsNlJscHBOR3RLZUZGT1VFUk1WVXhhUnpsMFRFZ3dielZJUkU1Q1NIZHBlVXByTTBwWk1EbG5kRTFRZGpWWVZIbzJNVWw1VjNNeFFVVklVbUo1Q25aSFlVc3pNVU5VVlhsd1QydDZkVzVVTmtKWmRrSm1RVkpTV1ZKc1YxaGhRa0ZhTmpoWGRVUjFTVEp3YkdsdFVYWmtiMnhGVUZveFF6bEtiRFZxY0RFS1dYTmxNbXRuWVRaYWJGTlFSRzVqVUVVemFXOUhWRTFrWVZVek4wZDJTRVJRYUVST2VrNU1LMGxrWVVwVE5HMHljMWRtTkVOUGJGcGxXa05uVmxWaFNBb3ZZV2RhTm5sdFptOUxaak5rUTJoNlFXUTRiMjkzSzA1c1MyRldZMDg0ZDBSM2VXZEhSM0lyY0VWU1kzRm9WVXhWV2tWa1UyRnBaVXBJZUVJNVpUQllDa0oxWmtsbVRHOUNWRkJ0TDNVMk5WWklObGxSUzA4clVWSnBhbUY2Y0hsS1NuSm1aRTE2Wm5wRVRsbFlTbGx1Y0RGV1ZXNVNkbFJ0VlVaMGFEUjRlbGdLV2psQ1YwcE1OVFpFU1hrd0swSnVVRlY2TVZabVRqQTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIHNlcnZlcjogaHR0cHM6Ly8zNS4xOTguMjM1LjEwMQogIG5hbWU6IGdrZV9jaXJjdWxhci1mdXNpb24tMzQ4MTExX2FzaWEtc291dGhlYXN0MS1iX215LWZpcnN0LWNsdXN0ZXItMQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogZ2tlX2NpcmN1bGFyLWZ1c2lvbi0zNDgxMTFfYXNpYS1zb3V0aGVhc3QxLWJfbXktZmlyc3QtY2x1c3Rlci0xCiAgICB1c2VyOiBjaS1jZC1waXBlbGluZS1nc2EKICBuYW1lOiBna2VfY2lyY3VsYXItZnVzaW9uLTM0ODExMV9hc2lhLXNvdXRoZWFzdDEtYl9teS1maXJzdC1jbHVzdGVyLTEKdXNlcnM6Ci0gbmFtZTogY2ktY2QtcGlwZWxpbmUtZ3NhCiAgdXNlcjoKICAgIGF1dGgtcHJvdmlkZXI6CiAgICAgIGNvbmZpZzoKICAgICAgICBhY2Nlc3MtdG9rZW46IHlhMjkuYy5iMEFYdjB6VE5ELUJFZDNmdzVuc1ZQTlE0a3oyUEZHYTd3d1hNSkJfdVMzNTNVTTVhZzBTQzNfVDYtdG11cC1ZeUgyT21WaVRwZlkzQWR2ZDl4amdXV3hJMm5LLU9YUkx4WDJ2d1N5TUV2RVNCSG4ySEkwTFZITnMtdUFRRnRUT1kwQkRINnhoVUpRbS1zV21haS12WUN1RWdHOVJwWEx2enJrNzlZX2cxbnNtWUJmYTNNOUVtUlZ6anFCM1JTODB2cnJpc1ZWZkxGSXhVS2xIT0NpR0pVWjBqUXpTYjNyZExyLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KICAgICAgICBleHBpcnk6ICIyMDIyLTA2LTAzVDA3OjE5OjI0LjA1MDE2NCswODowMCIKICAgICAgbmFtZTogZ2NwCmN1cnJlbnQtY29udGV4dDogZ2tlX2NpcmN1bGFyLWZ1c2lvbi0zNDgxMTFfYXNpYS1zb3V0aGVhc3QxLWJfbXktZmlyc3QtY2x1c3Rlci0xCg==' | base64 --decode > kubeconfig.yml
        echo "::set-output name=KUBECONFIG_FILE::$(echo $(pwd)/kubeconfig.yml)"
      id: kubeconfig
    - name: Deploy applications
      env:
        KUBECONFIG: ${{ steps.kubeconfig.outputs.KUBECONFIG_FILE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.google-creds.outputs.GOOGLE_CREDS }}
      run: |
        kubectl apply -f k8s/app/