---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-voting-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-voting
      type: api
  template:
    metadata:
      labels:
        app: movie-voting
        type: api
      annotations:
        vault.hashicorp.com/ca-cert: /vault/tls/ca-bundle.crt
        vault.hashicorp.com/tls-secret: vault-tls-secret
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'movie-app'
        vault.hashicorp.com/agent-inject-secret-configs: 'secret/data/uemdemo/app'
        vault.hashicorp.com/agent-inject-template-configs: |
          {{ with secret "secret/data/uemdemo/app" -}}
          export POSTGRES_USER="{{ .Data.data.postgres_user }}"
          export POSTGRES_PASSWORD="{{ .Data.data.postgres_pass }}"
          {{- end }}
    spec:
      serviceAccountName: movie-app
      containers:
        - name: movie-voting-api
          image: vsgdev/jsmovievoting_api:${IMAGE_VERSION}
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          env:
          - name: POSTGRES_HOST
            value: postgres-service
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: movie
          command: ["/bin/sh"]
          args: ["-c", "source /vault/secrets/configs && npm start"]

---
apiVersion: v1
kind: Service
metadata:
  name: movie-voting-api-service
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '5000'
      prometheus.io/path:   '/swagger-stats/metrics'
spec:
  type: NodePort
  selector:
    app: movie-voting
    type: api
  ports:
    - targetPort: 5000
      port: 5000
      nodePort: 30500

